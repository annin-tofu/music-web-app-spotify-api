{"version":3,"sources":["Login.js","TrackSearchResult.js","Player.js","Dashboard.js","useAuth.js","App.js","index.js"],"names":["Login","Container","className","style","minHeight","href","TrackSearchResult","track","chooseTrack","cursor","onClick","src","albumUrl","alt","height","width","title","artist","Player","accessToken","trackUri","useState","play","setPlay","useEffect","token","showSaveIcon","callback","state","isPlaying","uris","spotifyApi","SpotifyWebApi","clientId","Dashboard","code","setAccessToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","axios","post","then","res","data","window","history","pushState","catch","location","interval","setInterval","clearInterval","useAuth","search","setSearch","searchResults","setSearchResults","playingTrack","setPlayingTrack","lyrics","setLyrics","get","params","cancel","searchTracks","body","tracks","items","map","smallestAlbumImage","album","images","reduce","smallest","image","artists","name","uri","url","Form","Control","type","placeholder","value","onChange","e","target","overflowY","length","whiteSpace","URLSearchParams","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48759942.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container } from \"react-bootstrap\";\n\n// https://developer.spotify.com/documentation/general/guides/authorization-guide/\n// READ  1. Have your application request authorization; the user logs in and authorizes access\n\n// streaming : first access to streaming\n// user-read-email: user email\n// user-read-private:user infomation\n// user-library-read: determine if the song is in users library\n// user-library-modify: add songs to favourites\n// user-read-playback-state: determine if the song is playing or not\n// user-modify-playback-state: allows to modify which song spotify is playing\nconst AUTH_URL =\n  \"https://accounts.spotify.com/authorize?client_id=88e9ad173305490ba60849a2ecf9d0d8&response_type=code&redirect_uri=http://localhost:3000&scope=streaming%20user-read-email%20user-read-private%20user-library-read%20user-library-modify%20user-read-playback-state%20user-modify-playback-state\";\n\nexport default function Login() {\n  return (\n    <Container\n      // !!BOOTSTRAP notation!! the d-flex class is used to create a simple flexbox container.\n      // Horizontal and vertical elements - d-flex supports creating elements both horizontally (. flex-row) and vertically (. flex-column). Col only support horizontally.\n      className=\"d-flex justify-content-center align-items-center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      {/* //https://getbootstrap.com/docs/4.0/components/buttons/\n   !!BOOTSTRAP notation!!   btn is button. clickable.  */}\n      <a className=\"btn btn-success btn-lg\" href={AUTH_URL}>\n        Login With Spotify\n      </a>\n    </Container>\n  );\n}\n","import React from \"react\";\n\nexport default function TrackSearchResult({ track, chooseTrack }) {\n  function handlePlay() {\n    chooseTrack(track);\n  }\n\n  return (\n    <div\n      className=\"d-flex m-2 align-items-center\"\n      style={{ cursor: \"pointer\" }}\n      onClick={handlePlay}\n    >\n      <img\n        src={track.albumUrl}\n        alt=\"\"\n        style={{ height: \"64px\", width: \"64px\" }}\n      />\n      <div className=\"ml-3\">\n        <div>{track.title}</div>\n        <div className=\"text-muted\">{track.artist}</div>\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\n\nexport default function Player({ accessToken, trackUri }) {\n  const [play, setPlay] = useState(false);\n\n  useEffect(() => setPlay(true), [trackUri]);\n\n  if (!accessToken) return null;\n  return (\n    <SpotifyPlayer\n      token={accessToken}\n      showSaveIcon\n      //   if the song is not playing, then play\n      callback={(state) => {\n        if (!state.isPlaying) setPlay(false);\n      }}\n      play={play}\n      uris={trackUri ? [trackUri] : []}\n    />\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport useAuth from \"./useAuth\";\nimport { Container, Form } from \"react-bootstrap\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport TrackSearchResult from \"./TrackSearchResult\";\nimport Player from \"./Player\";\nimport axios from \"axios\";\n\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"88e9ad173305490ba60849a2ecf9d0d8\",\n});\n\nexport default function Dashboard({ code }) {\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n  const [lyrics, setLyrics] = useState(\"\");\n\n  function chooseTrack(track) {\n    setPlayingTrack(track);\n    setSearch(\"\");\n    setLyrics(\"\");\n  }\n\n  //Lyrics\n  useEffect(() => {\n    if (!playingTrack) return;\n\n    axios\n      .get(\"http://localhost:3001/lyrics\", {\n        params: {\n          track: playingTrack.title,\n          artist: playingTrack.artist,\n        },\n      })\n      .then((res) => {\n        setLyrics(res.data.lyrics);\n      });\n  }, [playingTrack]);\n\n  //use useEffect for searching songs/artists.\n  useEffect(() => {\n    // if we dont have accessToken, then return\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n\n  // WHENEVER search query or accessToken changes, run code\n  // if we dont have search, just return and show search results which is (\"empty array\")\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n\n    // some request may take longer, and some may take less\n    // so cancel request and\n    let cancel = false;\n\n    //searches any tracks related to the search\n    spotifyApi.searchTracks(search).then((res) => {\n      if (cancel) return;\n      setSearchResults(\n        res.body.tracks.items.map((track) => {\n          // below lines are for choosing the smallest album image out of 3 images that spotify API offers. by choosing the one with smallest height.\n          const smallestAlbumImage = track.album.images.reduce(\n            (smallest, image) => {\n              if (image.height < smallest.height) return image;\n              return smallest;\n            },\n            track.album.images[0]\n          );\n\n          return {\n            artist: track.artists[0].name,\n            title: track.name,\n            uri: track.uri,\n            albumUrl: smallestAlbumImage.url,\n          };\n        })\n      );\n    });\n\n    return () => (cancel = true);\n  }, [search, accessToken]);\n\n  return (\n    <Container className=\"d-flex flex-column py-2\" style={{ height: \"100vh\" }}>\n      <Form.Control\n        type=\"search\"\n        placeholder=\"Search Songs/Artists\"\n        value={search}\n        onChange={(e) => setSearch(e.target.value)}\n      />\n      {/* //flex-grow-1: will fill up all the space side-by-side */}\n      <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\n        {searchResults.map((track) => (\n          <TrackSearchResult\n            track={track}\n            key={track.uri}\n            chooseTrack={chooseTrack}\n          />\n        ))}\n        {searchResults.length === 0 && (\n          //whiteSpace: \"pre  => this wraps up the extra space\n          <div className=\"text-center\" style={{ whiteSpace: \"pre\" }}>\n            {lyrics}\n          </div>\n        )}\n      </div>\n      <div>\n        <Player accessToken={accessToken} trackUri={playingTrack?.uri} />\n      </div>\n    </Container>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function useAuth(code) {\n  const [accessToken, setAccessToken] = useState();\n  const [refreshToken, setRefreshToken] = useState();\n  const [expiresIn, setExpiresIn] = useState();\n\n  useEffect(() => {\n    axios\n      .post(\"http://localhost:3001/login\", {\n        code,\n      })\n      .then((res) => {\n        setAccessToken(res.data.accessToken);\n        setRefreshToken(res.data.refreshToken);\n        setExpiresIn(res.data.expiresIn);\n        //window.history.pushState line: push root url. deletes the random numbers from the end of code\n        window.history.pushState({}, null, \"/\");\n      })\n      .catch(() => {\n        //for error fix\n        window.location = \"/\";\n      });\n  }, [code]);\n\n  useEffect(() => {\n    //I was getting error, since before lines under axios finishes, it was trying to refresh tokens. so\n    // below line reads: if we do not have refreshToken or expiresIn, then just want to return. then the error is gone\n    if (!refreshToken || !expiresIn) return;\n    const interval = setInterval(() => {\n      axios\n        .post(\"http://localhost:3001/refresh\", {\n          refreshToken,\n        })\n        .then((res) => {\n          setAccessToken(res.data.accessToken);\n          // setRefreshToken(res.data.refreshToken);   {/* these lines are commented out since, to refresh the token, we only needs AccessToken and ExpiresIn variables*/}\n          setExpiresIn(res.data.expiresIn);\n          // //window.history.pushState line: push root url. deletes the random numbers from the end of code\n          // window.history.pushState({}, null, \"/\");\n        })\n        .catch(() => {\n          //for error fix\n          window.location = \"/\";\n        });\n      // refreshes 1 minute before expires\n    }, (expiresIn - 60) * 1000);\n\n    return () => clearInterval(interval);\n  }, [refreshToken, expiresIn]);\n\n  //   //accessToken expires every 1 hour(3600s), so setting up commannd here to rehresh token automatically\n  //   // below line reads: whenever the RefreshToken or ExpiresIn changes, it automatically refreshes the token\n  //   useEffect(() => {}, [refreshToken, expiresIn]);\n  return accessToken;\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\"; //min: minimum version for faster responsive;\nimport Login from \"./Login\";\nimport Dashboard from \"./Dashboard\";\n\n//window.location.search : to grab the portion of the code after the \"?\"\n// .get(\"code\"): to make the portion after the \"?\" the \"code\"\nconst code = new URLSearchParams(window.location.search).get(\"code\");\n\nfunction App() {\n  //   // // TERNARY expression :\n  //   // If we have a code (\"?\"), then render out the Dashboard component.\n  //   we want to pass it into the code we have. Otherwise (\":\"), want to render Login component\n  return code ? <Dashboard code={code} /> : <Login />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}